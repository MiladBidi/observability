services:
  kong-db:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - app_net
  kong:
    image: kong-jq:2.8
    container_name: kong
      # command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_PORT: 5432
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_LOG_LEVEL: debug
    depends_on:
      - kong-db
    ports:
      - "8000:8000" # Proxy
      - "8001:8001" # Admin API
      - "8443:8443" # Proxy SSL
      - "8444:8444" # Admin API SSL
    volumes:
      - kong-vol:/usr/local/kong
    networks:
      - app_net
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
    networks:
      - app_net

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ./alertmanager/:/etc/alertmanager/
      - ./alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - app_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - app_net
        #  konga:
        #    image: pantsel/konga:2.8
        #    container_name: konga
        #    environment:
        #      DB_ADAPTER: "postgres"
        #      DB_HOST: "kong-db"
        #      DB_USER: "kong"
        #      DB_PASSWORD: "kong"
        #      DB_DATABASE: "konga"
        #      NODE_ENV: "production"
        #    ports:
        #      - "1337:1337" # Konga GUI
        #    depends_on:
        #      - kong-db
        #      - kong
        #    networks:
        #      - app_net

  microservice1:
    image: python:3.9-slim
    container_name: microservice1
    working_dir: /app
    volumes:
      - ./microservice1:/app
    command: >
      sh -c "pip install flask prometheus_client && python app1.py"
    ports:
      - "5000:5000"
    networks:
      - app_net

  konga:
    image: pantsel/konga:latest
    container_name: konga
    # command: "node ./bin/konga.js  prepare --adapter postgres --uri postgresql://localhost:5432/konga"
    environment:
      DB_ADAPTER: "postgres"
      DB_HOST: "kong-db"
      DB_PORT: 5432
      DB_USER: "kong"
      DB_PASSWORD: "kong"
      DB_DATABASE: "konga" # Separate database for Konga
      NODE_ENV: "production"
    ports:
      - "1337:1337" # Konga GUI
    depends_on:
      - kong-db
      - kong
    networks:
      - app_net
    volumes:
      - konga-data:/app/konga

volumes:
  kong-data:
  kong-vol:
  konga-data:

networks:
  app_net:
    name: app_net
    external: true

